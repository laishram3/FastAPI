name: Deploy FastAPI to EC2 with Terraform

on:
  push:
    branches: [main]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'

    - name: Set up Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: 1.5.5   
    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1 # Or your region
 

    - name: Terraform Init
      run: terraform init

    - name: Terraform Plan
      run: terraform plan -out=tfplan

    - name: Terraform Apply
      run: terraform apply -auto-approve tfplan
      env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

    - name: Wait for EC2 instance to be ready
      run: sleep 30

    - name: Save private key
      run: |
        echo "${{ secrets.EC2_SSH_KEY }}" > key.pem
        chmod 600 key.pem

    - name: Get EC2 Public IP
      id: get_ip
      run: |
        IP=$(aws ec2 describe-instances \
          --filters "Name=tag:Name,Values=fastapi-instance" \
          --query "Reservations[0].Instances[0].PublicIpAddress" \
          --output text)
        echo "ec2ip=$IP" >> "$GITHUB_OUTPUT"

    - name: Upload main.py via SCP
      run: |
        scp -o StrictHostKeyChecking=no -i key.pem main.py ubuntu@$(terraform output -raw instance_public_ip):/home/ubuntu/main.py

    - name: Run FastAPI app on EC2
      run: |
        ssh -o StrictHostKeyChecking=no -i key.pem ubuntu@$(terraform output -raw instance_public_ip) << EOF
          sudo apt update
          sudo apt install -y python3-pip
          pip3 install fastapi uvicorn --user
          nohup ~/.local/bin/uvicorn main:app --host 0.0.0.0 --port 80 &
        EOF
